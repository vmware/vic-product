eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljLXByb2R1Y3QgcmVwbzoKIyAkIGV4cG9ydCBEUk9ORV9TRVJWRVI9aHR0cHM6Ly9jaS52Y25hLmlvCiMgJCBleHBvcnQgRFJPTkVfVE9LRU49PHRva2VuPgojICQgZHJvbmUgc2lnbiB2bXdhcmUvdmljLXByb2R1Y3QKIyBUaGUgc2VjcmV0cyBmaWxlIGlzIGluIG91ciBsb2NhbCBnaXQgcmVwby4gIEFzayBtaGFnZW4gZm9yIGFjY2Vzcy4KLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljLXByb2R1Y3QKICAgIApwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgdGFnczogdHJ1ZQogICAgcmVjdXJzaXZlOiBmYWxzZQoKICB1bmlmaWVkLW92YS1idWlsZDogCiAgICBpbWFnZTogZ2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzIKICAgIHB1bGw6IHRydWUKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICAgT1ZBX0JVSUxEX1NTSF9LRVk6ICR7T1ZBX0JVSUxEX1NTSF9LRVl9CiAgICAgICBPVkFfQlVJTERfTUFDSElORV9JUDogJHtPVkFfQlVJTERfTUFDSElORV9JUH0KICAgICAgIE9WQV9CVUlMRF9VU0VSOiAke09WQV9CVUlMRF9VU0VSfQogICAgICAgUEFDS0VSX0VTWF9IT1NUOiAke1BBQ0tFUl9FU1hfSE9TVH0KICAgICAgIFBBQ0tFUl9VU0VSOiAke1BBQ0tFUl9VU0VSfQogICAgICAgQlVJTERfUE9SVEdST1VQOiAke0JVSUxEX1BPUlRHUk9VUH0KICAgICAgIFBBQ0tFUl9QQVNTV09SRDogJHtQQUNLRVJfUEFTU1dPUkR9CiAgICAgICBCVUlMRF9WSUNFTkdJTkVfUkVWSVNJT046ICR7QlVJTERfVklDRU5HSU5FX1JFVklTSU9OfQogICAgICAgRFJPTkVfVElNRU9VVDogJHtEUk9ORV9USU1FT1VUfQogICAgICAgRFJPTkVfVElNRU9VVF9JTkFDVElWSVRZOiAke0RST05FX1RJTUVPVVRfSU5BQ1RJVklUWX0KICAgICAgIEJVSUxEX05VTUJFUjogJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICBjb21tYW5kczoKICAgICAgLSBrZXlmaWxlPSJvdmFfaWRfcnNhIgogICAgICAtIGVjaG8gJE9WQV9CVUlMRF9TU0hfS0VZID4gJGtleWZpbGUKICAgICAgLSBjaG1vZCA2MDAgJGtleWZpbGUKICAgICAgLSBpbnN0YWxsZXIvc2NyaXB0cy9vdmEtc3NoLWJ1aWxkLnNoICRrZXlmaWxlCgogIGJ1bmRsZToKICAgICBpbWFnZTogaGFyYm9yLmNpLmRyb25lLmxvY2FsL2xpYnJhcnkvZ29sYW5nOjEuOAogICAgIHB1bGw6IHRydWUKICAgICBjb21tYW5kczoKICAgICAgIC0gbWtkaXIgYnVuZGxlCiAgICAgICAtIGNwIGJpbi92aWMtKi5vdmEgYnVuZGxlCiAgICAgICAtIGxzIC1hbCBidW5kbGUKCiAgcHVibGlzaC1nY3MtYnVpbGRzOgogICAgIGltYWdlOiBtYXBsYWluL2Ryb25lLWdjczpsYXRlc3QKICAgICBwdWxsOiB0cnVlCiAgICAgc291cmNlOiBidW5kbGUKICAgICB0YXJnZXQ6IHZpYy1wcm9kdWN0LW92YS1idWlsZHMKICAgICBhY2w6CiAgICAgICAtIGFsbFVzZXJzOlJFQURFUgogICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXByb2R1Y3QKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiBdCiAgICAgIHN0YXR1czogc3VjY2VzcwoKICBwdWJsaXNoLWdjcy1yZWxlYXNlczoKICAgICBpbWFnZTogbWFwbGFpbi9kcm9uZS1nY3M6bGF0ZXN0CiAgICAgcHVsbDogdHJ1ZQogICAgIHNvdXJjZTogYnVuZGxlCiAgICAgdGFyZ2V0OiB2aWMtcHJvZHVjdC1vdmEtcmVsZWFzZXMKICAgICBhY2w6CiAgICAgICAtIGFsbFVzZXJzOlJFQURFUgogICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXByb2R1Y3QKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjpkaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBwdWxsOiB0cnVlCg.xXcolSrvT1FYeE7wDudczcAumeEphIe5wndarGTbC-s