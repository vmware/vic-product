eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljLXByb2R1Y3QgcmVwbzoKIyAkIGV4cG9ydCBEUk9ORV9TRVJWRVI9aHR0cHM6Ly9jaS52Y25hLmlvCiMgJCBleHBvcnQgRFJPTkVfVE9LRU49PHRva2VuPgojICQgZHJvbmUgc2lnbiB2bXdhcmUvdmljLXByb2R1Y3QKIyBUaGUgc2VjcmV0cyBmaWxlIGlzIGluIG91ciBsb2NhbCBnaXQgcmVwby4gIEFzayBtaGFnZW4gZm9yIGFjY2Vzcy4KLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljLXByb2R1Y3QKICAgIApwaXBlbGluZToKICBjbG9uZToKICAgIGltYWdlOiBwbHVnaW5zL2dpdAogICAgdGFnczogdHJ1ZQogICAgcmVjdXJzaXZlOiBmYWxzZQoKICB1bmlmaWVkLW92YS1idWlsZDogCiAgICBpbWFnZTogZ2NyLmlvL2VtaW5lbnQtbmF0aW9uLTg3MzE3L3ZpYy1pbnRlZ3JhdGlvbi10ZXN0OjEuMzIKICAgIHB1bGw6IHRydWUKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICAgT1ZBX0JVSUxEX1NTSF9LRVk6ICR7T1ZBX0JVSUxEX1NTSF9LRVl9CiAgICAgICBPVkFfQlVJTERfTUFDSElORV9JUDogJHtPVkFfQlVJTERfTUFDSElORV9JUH0KICAgICAgIE9WQV9CVUlMRF9VU0VSOiAke09WQV9CVUlMRF9VU0VSfQogICAgICAgUEFDS0VSX0VTWF9IT1NUOiAke1BBQ0tFUl9FU1hfSE9TVH0KICAgICAgIFBBQ0tFUl9VU0VSOiAke1BBQ0tFUl9VU0VSfQogICAgICAgQlVJTERfUE9SVEdST1VQOiAke0JVSUxEX1BPUlRHUk9VUH0KICAgICAgIFBBQ0tFUl9QQVNTV09SRDogJHtQQUNLRVJfUEFTU1dPUkR9CiAgICAgICBCVUlMRF9WSUNFTkdJTkVfUkVWSVNJT046ICR7QlVJTERfVklDRU5HSU5FX1JFVklTSU9OfQogICAgICAgRFJPTkVfVElNRU9VVDogJHtEUk9ORV9USU1FT1VUfQogICAgICAgRFJPTkVfVElNRU9VVF9JTkFDVElWSVRZOiAke0RST05FX1RJTUVPVVRfSU5BQ1RJVklUWX0KICAgICAgIERST05FX0JVSUxEX05VTUJFUjogJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICBjb21tYW5kczoKICAgICAgLSBrZXlmaWxlPSJvdmFfaWRfcnNhIgogICAgICAtIGVjaG8gJE9WQV9CVUlMRF9TU0hfS0VZID4gJGtleWZpbGUKICAgICAgLSBjaG1vZCA2MDAgJGtleWZpbGUKICAgICAgLSBlY2hvICR7RFJPTkVfQlVJTERfTlVNQkVSfQogICAgICAtIGluc3RhbGxlci9zY3JpcHRzL292YS1zc2gtYnVpbGQuc2ggJGtleWZpbGUKCiAgYnVuZGxlOgogICAgIGltYWdlOiBoYXJib3IuY2kuZHJvbmUubG9jYWwvbGlicmFyeS9nb2xhbmc6MS44CiAgICAgcHVsbDogdHJ1ZQogICAgIGNvbW1hbmRzOgogICAgICAgLSBta2RpciBidW5kbGUKICAgICAgIC0gY3AgYmluL3ZpYy0qLm92YSBidW5kbGUKICAgICAgIC0gbHMgLWFsIGJ1bmRsZQoKICBwdWJsaXNoLWdjcy1idWlsZHM6CiAgICAgaW1hZ2U6IG1hcGxhaW4vZHJvbmUtZ2NzOmxhdGVzdAogICAgIHB1bGw6IHRydWUKICAgICBzb3VyY2U6IGJ1bmRsZQogICAgIHRhcmdldDogdmljLXByb2R1Y3Qtb3ZhLWJ1aWxkcwogICAgIGFjbDoKICAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICAgY2FjaGVfY29udHJvbDogcHVibGljLG1heC1hZ2U9MzYwMAogICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QsIHB1c2ggXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIHB1Ymxpc2gtZ2NzLXJlbGVhc2VzOgogICAgIGltYWdlOiBtYXBsYWluL2Ryb25lLWdjczpsYXRlc3QKICAgICBwdWxsOiB0cnVlCiAgICAgc291cmNlOiBidW5kbGUKICAgICB0YXJnZXQ6IHZpYy1wcm9kdWN0LW92YS1yZWxlYXNlcwogICAgIGFjbDoKICAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICAgY2FjaGVfY29udHJvbDogcHVibGljLG1heC1hZ2U9MzYwMAogICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBldmVudDogWyBwdXNoLCB0YWcgXQogICAgICBicmFuY2g6IFsgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOmRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIHB1bGw6IHRydWUK.OYTpWi6zyNeP3v1xRffG2sx_VRsnJpi2WI7NAbw3KOc