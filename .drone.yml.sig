eyJhbGciOiJIUzI1NiJ9.IyBBZnRlciBhbnkgY2hhbmdlIHRvIHRoaXMgZmlsZSB5b3UgTVVTVCByZS1zaWduIGFuZCBjaGVja2luIHRoZSAuZHJvbmUueW1sLnNpZwojIFdoZW4geW91IGFyZSByZWFkeSB0byBzdWJtaXQgYSBwdWxsIHJlcXVlc3QsIHlvdSBtdXN0IHJlZ2VuZXJhdGUgLmRyb25lLnltbC5zaWcgZm9yIHRoZSB2bXdhcmUvdmljLXByb2R1Y3QgcmVwbzoKIyAkIGV4cG9ydCBEUk9ORV9TRVJWRVI9aHR0cHM6Ly9jaS52Y25hLmlvCiMgJCBleHBvcnQgRFJPTkVfVE9LRU49PHRva2VuPgojICQgZHJvbmUgc2lnbiB2bXdhcmUvdmljLXByb2R1Y3QKIyBUaGUgc2VjcmV0cyBmaWxlIGlzIGluIG91ciBsb2NhbCBnaXQgcmVwby4gIEFzayBtaGFnZW4gZm9yIGFjY2Vzcy4KLS0tCndvcmtzcGFjZToKICBiYXNlOiAvZ28KICBwYXRoOiBzcmMvZ2l0aHViLmNvbS92bXdhcmUvdmljLXByb2R1Y3QKCnBpcGVsaW5lOgogIGNsb25lOgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0CiAgICB0YWdzOiB0cnVlCiAgICByZWN1cnNpdmU6IGZhbHNlCgogIGRjaC1idWlsZDoKICAgIGVudmlyb25tZW50OgogICAgICBET0NLRVJfSE9TVDogdGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGltYWdlOiBkb2NrZXI6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgcHMKICAgICAgLSBhcGsgYWRkIC0tdXBkYXRlIGJhc2ggZ2l0CiAgICAgIC0gZGludi9jaS5zaCBidWlsZAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgcmVwbzogdm13YXJlL3ZpYy1wcm9kdWN0CiAgICAgIGV2ZW50OiBbIHB1c2gsIHB1bGxfcmVxdWVzdCwgdGFnLCBkZXBsb3ltZW50IF0KCiAgZGNoLXB1c2g6CiAgICBlbnZpcm9ubWVudDoKICAgICAgRE9DS0VSX0hPU1Q6IHRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBpbWFnZTogZG9ja2VyOmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIHBzCiAgICAgIC0gYXBrIGFkZCAtLXVwZGF0ZSBiYXNoIGdpdAogICAgICAtIGRpbnYvY2kuc2ggcHVzaAogICAgd2hlbjoKICAgICAgYnJhbmNoOiBtYXN0ZXIKICAgICAgcmVwbzogdm13YXJlL3ZpYy1wcm9kdWN0CiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZywgZGVwbG95bWVudCBdCgogIHVuaWZpZWQtb3ZhLWJ1aWxkOgogICAgaW1hZ2U6IGdjci5pby9lbWluZW50LW5hdGlvbi04NzMxNy92aWMtcHJvZHVjdC1idWlsZDpsYXRlc3QKICAgIHB1bGw6IHRydWUKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGVudmlyb25tZW50OgogICAgICBBRE1JUkFMOiAke0FETUlSQUx9CiAgICAgIEJVSUxEX0FETUlSQUxfUkVMRUFTRTogJHtCVUlMRF9BRE1JUkFMX1JFTEVBU0V9CiAgICAgIEJVSUxEX1ZJQ0VOR0lORV9SRVZJU0lPTjogJHtCVUlMRF9WSUNFTkdJTkVfUkVWSVNJT059CiAgICAgIERST05FX0JVSUxEX05VTUJFUjogJHtEUk9ORV9CVUlMRF9OVU1CRVJ9CiAgICAgIERST05FX1RJTUVPVVQ6ICR7RFJPTkVfVElNRU9VVH0KICAgICAgRFJPTkVfVElNRU9VVF9JTkFDVElWSVRZOiAke0RST05FX1RJTUVPVVRfSU5BQ1RJVklUWX0KICAgICAgSEFSQk9SOiAke0hBUkJPUn0KICAgICAgVEVSTTogeHRlcm0KICAgICAgVklDX01BQ0hJTkVfU0VSVkVSOiAke1ZJQ19NQUNISU5FX1NFUlZFUn0KICAgICAgVklDRU5HSU5FOiAke1ZJQ0VOR0lORX0KICAgIHZvbHVtZXM6CiAgICAgIC0gL2RldjovZGV2CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtIGluc3RhbGxlci9zY3JpcHRzL2NpLWJ1aWxkLnNoCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXByb2R1Y3QKICAgICAgZXZlbnQ6IFsgcHVzaCwgcHVsbF9yZXF1ZXN0LCB0YWcsIGRlcGxveW1lbnQgXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogc3VjY2VzcwoKIyAgaW50ZWdyYXRpb24tdGVzdDoKIyAgICBpbWFnZTogaGFyYm9yLmNpLmRyb25lLmxvY2FsL2xpYnJhcnkvdmljLWludGVncmF0aW9uLXRlc3Q6MS4zNgojICAgIHB1bGw6IHRydWUKIyAgICBlbnZpcm9ubWVudDoKIyAgICAgIEJJTjogYmluCiMgICAgICBHT1BBVEg6IC9nbwojICAgICAgR1NfQ0xJRU5UX0VNQUlMOiAke0dTX0NMSUVOVF9FTUFJTH0KIyAgICAgIEdTX1BST0pFQ1RfSUQ6ICR7R1NfUFJPSkVDVF9JRH0KIyAgICAgIEdTX1BSSVZBVEVfS0VZOiAke0dTX1BSSVZBVEVfS0VZfQojICAgICAgUFVCTElDX05FVFdPUks6ICR7UFVCTElDX05FVFdPUkt9CiMgICAgICBTSEVMTDogL2Jpbi9iYXNoCiMgICAgICBURVNUX0RBVEFTVE9SRTogJHtURVNUX0RBVEFTVE9SRX0KIyAgICAgIFRFU1RfUEFTU1dPUkQ6ICR7VEVTVF9QQVNTV09SRH0KIyAgICAgIFRFU1RfUkVTT1VSQ0U6ICR7VEVTVF9SRVNPVVJDRX0KIyAgICAgIFRFU1RfVVJMOiAke1RFU1RfVVJMfQojICAgICAgVEVTVF9VU0VSTkFNRTogJHtURVNUX1VTRVJOQU1FfQojICAgIHZvbHVtZXM6CiMgICAgICAtIC90bXAKIyAgICBjb21tYW5kczoKIyAgICAgIC0gdGVzdHMvcm9ib3QtcnVuLnNoCiMgICAgd2hlbjoKIyAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAojICAgICAgZXZlbnQ6IFsgcHVzaCwgcHVsbF9yZXF1ZXN0LCB0YWcsIGRlcGxveW1lbnQgXQojICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQojICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIGJ1bmRsZS1kZXYtYnVpbGRzOgogICAgaW1hZ2U6IGhhcmJvci5jaS5kcm9uZS5sb2NhbC9saWJyYXJ5L2dvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIG1rZGlyIGJ1bmRsZQogICAgICAtIGNkIGluc3RhbGxlci9iaW4KICAgICAgLSBUTVA9JChlY2hvICIkKGxzIC0xdCB8IGdyZXAgIlwub3ZhIikiIHwgc2VkICJzLy0vLWRldi0ke0RST05FX0JVSUxEX05VTUJFUn0tLyIpCiAgICAgIC0gZWNobyAiUmVuYW1pbmcgYnVpbGQgYXJ0aWZhY3QgdG8gJFRNUC4uLiIKICAgICAgLSBtdiB2aWMtKi5vdmEgLi4vLi4vYnVuZGxlLyRUTVAKICAgICAgLSBscyAtbCAuLi8uLi9idW5kbGUKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBldmVudDogWyBwdXNoLCB0YWcgXQogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogc3VjY2VzcwoKICBidW5kbGUtc3RhZ2UtYnVpbGRzOgogICAgaW1hZ2U6IGhhcmJvci5jaS5kcm9uZS5sb2NhbC9saWJyYXJ5L2dvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIG1rZGlyIGJ1bmRsZQogICAgICAtIGNkIGluc3RhbGxlci9iaW4KICAgICAgLSBUTVA9JChlY2hvICIkKGxzIC0xdCB8IGdyZXAgIlwub3ZhIikiIHwgc2VkICJzLy0vLXN0YWdlLSR7RFJPTkVfQlVJTERfTlVNQkVSfS0vIikKICAgICAgLSBlY2hvICJSZW5hbWluZyBidWlsZCBhcnRpZmFjdCB0byAkVE1QLi4uIgogICAgICAtIG12IHZpYy0qLm92YSAuLi8uLi9idW5kbGUvJFRNUAogICAgICAtIGxzIC1sIC4uLy4uL2J1bmRsZQogICAgd2hlbjoKICAgICAgcmVwbzogdm13YXJlL3ZpYy1wcm9kdWN0CiAgICAgIGV2ZW50OiBbIGRlcGxveW1lbnQgXQogICAgICBlbnZpcm9ubWVudDogWyBzdGFnaW5nIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgYnVuZGxlLXJlbGVhc2UtYnVpbGRzOgogICAgaW1hZ2U6IGhhcmJvci5jaS5kcm9uZS5sb2NhbC9saWJyYXJ5L2dvbGFuZzoxLjgKICAgIHB1bGw6IHRydWUKICAgIGNvbW1hbmRzOgogICAgICAtIG1rZGlyIGJ1bmRsZQogICAgICAtIGNkIGluc3RhbGxlci9iaW4KICAgICAgLSBUTVA9JChlY2hvICIkKGxzIC0xdCB8IGdyZXAgIlwub3ZhIikiIHwgc2VkICJzLy0vLSR7RFJPTkVfQlVJTERfTlVNQkVSfS0vIikKICAgICAgLSBlY2hvICJSZW5hbWluZyBidWlsZCBhcnRpZmFjdCB0byAkVE1QLi4uIgogICAgICAtIG12IHZpYy0qLm92YSAuLi8uLi9idW5kbGUvJFRNUAogICAgICAtIGxzIC1sIC4uLy4uL2J1bmRsZQogICAgd2hlbjoKICAgICAgcmVwbzogdm13YXJlL3ZpYy1wcm9kdWN0CiAgICAgIGV2ZW50OiBbIGRlcGxveW1lbnQgXQogICAgICBlbnZpcm9ubWVudDogWyByZWxlYXNlIF0KICAgICAgYnJhbmNoOiBbIHJlbGVhc2VzLyosIHJlZnMvdGFncy8qIF0KICAgICAgc3RhdHVzOiBzdWNjZXNzCgogIHB1Ymxpc2gtZ2NzLWJ1aWxkczoKICAgIGltYWdlOiB2aWN0ZXN0L2Ryb25lLWdjczoxCiAgICBwdWxsOiB0cnVlCiAgICBzb3VyY2U6IGJ1bmRsZS1kZXYtYnVpbGRzCiAgICB0YXJnZXQ6IHZpYy1wcm9kdWN0LW92YS1idWlsZHMKICAgIGFjbDoKICAgICAgLSBhbGxVc2VyczpSRUFERVIKICAgIGNhY2hlX2NvbnRyb2w6IHB1YmxpYyxtYXgtYWdlPTM2MDAKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBldmVudDogWyBwdXNoLCB0YWcsIGRlcGxveW1lbnQgXQogICAgICBlbnZpcm9ubWVudDogWyBzdGFnaW5nIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgcHVibGlzaC1nY3MtcmVsZWFzZXM6CiAgICBpbWFnZTogdmljdGVzdC9kcm9uZS1nY3M6MQogICAgcHVsbDogdHJ1ZQogICAgc291cmNlOiBidW5kbGUtcmVsZWFzZS1idWlsZHMKICAgIHRhcmdldDogdmljLXByb2R1Y3Qtb3ZhLXJlbGVhc2VzCiAgICBhY2w6CiAgICAgIC0gYWxsVXNlcnM6UkVBREVSCiAgICBjYWNoZV9jb250cm9sOiBwdWJsaWMsbWF4LWFnZT0zNjAwCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXByb2R1Y3QKICAgICAgZXZlbnQ6IFsgZGVwbG95bWVudCBdCiAgICAgIGVudmlyb25tZW50OiBbIHJlbGVhc2UgXQogICAgICBicmFuY2g6IFsgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IHN1Y2Nlc3MKCiAgbm90aWZ5LXNsYWNrLW9uLWZhaWw6CiAgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICAgd2ViaG9vazogJHtTTEFDS19VUkx9CiAgICB1c2VybmFtZTogZHJvbmUKICAgIHRlbXBsYXRlOiA-CiAgICAgICAgQnVpbGQge3sgYnVpbGQubGluayB9fSBmYWlsZWQgZnJvbSB0aGUgZXZlbnQge3sgYnVpbGQuZXZlbnQgfX0gYnkge3sgbG93ZXJjYXNlIGJ1aWxkLmF1dGhvciB9fS4KICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBicmFuY2g6IFsgbWFzdGVyLCByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogWyBmYWlsdXJlIF0KCiAgbm90aWZ5LXNsYWNrOgogICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2sKICAgIHdlYmhvb2s6ICR7UFJPRFVDVF9TTEFDS19VUkx9CiAgICB1c2VybmFtZTogZHJvbmUKICAgIHRlbXBsYXRlOiA-CiAgICAgICAgQnVpbGQgJ3t7IGJ1aWxkLmxpbmsgfX0nIGNvbXBsZXRlZCB3aXRoIGEgJ3t7IGJ1aWxkLnN0YXR1cyB9fScgc3RhdHVzIGZyb20gdGhlIGV2ZW50ICd7eyBidWlsZC5ldmVudCB9fScgYnkgJ3t7IGxvd2VyY2FzZSBidWlsZC5hdXRob3IgfX0nCiAgICB3aGVuOgogICAgICByZXBvOiB2bXdhcmUvdmljLXByb2R1Y3QKICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZXMvKiwgcmVmcy90YWdzLyogXQogICAgICBzdGF0dXM6IFsgc3VjY2VzcywgZmFpbHVyZSBdCgogIG5vdGlmeS1zbGFjay1vbi1zdWNjZXNzZnVsLXJlbGVhc2U6CiAgICBpbWFnZTogcGx1Z2lucy9zbGFjawogICAgd2ViaG9vazogJHtQUk9EVUNUX1NMQUNLX1VSTH0KICAgIHVzZXJuYW1lOiBkcm9uZQogICAgdGVtcGxhdGU6ID4KICAgICAgVGhlIGxhdGVzdCB2ZXJzaW9uIG9mIFZJQyBPVkEgaGFzIGJlZW4gcmVsZWFzZWQsIGZpbmQgdGhlIGJ1aWxkIGhlcmU6IGh0dHBzOi8vY29uc29sZS5jbG91ZC5nb29nbGUuY29tL3N0b3JhZ2UvYnJvd3Nlci92aWMtcHJvZHVjdC1vdmEtcmVsZWFzZXMKICAgIHdoZW46CiAgICAgIHJlcG86IHZtd2FyZS92aWMtcHJvZHVjdAogICAgICBldmVudDogWyBkZXBsb3ltZW50IF0KICAgICAgZW52aXJvbm1lbnQ6IFsgcmVsZWFzZSBdCiAgICAgIGJyYW5jaDogWyByZWxlYXNlcy8qLCByZWZzL3RhZ3MvKiBdCiAgICAgIHN0YXR1czogWyBzdWNjZXNzIF0KCnNlcnZpY2VzOgogIGRpbmQ6CiAgICBpbWFnZTogZG9ja2VyOmRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIHB1bGw6IHRydWUK.Z9dqCD7R6CMyUB0p1wBiMf8dFALsmeOE_2EYK-zdkpI