eyJhbGciOiJIUzI1NiJ9.# After any change to this file you MUST re-sign and checkin the .drone.yml.sig
# When you are ready to submit a pull request, you must regenerate .drone.yml.sig for the vmware/vic-product repo:
# $ export DRONE_SERVER=https://ci.vcna.io
# $ export DRONE_TOKEN=<token>
# $ drone sign vmware/vic-product
# The secrets file is in our local git repo.  Ask mhagen for access.
---
workspace:
  base: /go
  path: src/github.com/vmware/vic-product

pipeline:
  clone:
    image: plugins/git
    tags: true
    recursive: false

  dch-build:
    environment:
      DOCKER_HOST: tcp://127.0.0.1:2375
    image: docker:latest
    pull: true
    commands:
      - docker ps
      - apk add --update bash git
      - dinv/ci.sh build
    when:
      branch: master
      repo: vmware/vic-product
      event: [ push, pull_request, tag, deployment ]

  dch-push:
    environment:
      DOCKER_HOST: tcp://127.0.0.1:2375
    image: docker:latest
    pull: true
    commands:
      - docker ps
      - apk add --update bash git
      - dinv/ci.sh push
    when:
      branch: master
      repo: vmware/vic-product
      event: [ push, tag, deployment ]

  unified-ova-build:
    image: gcr.io/eminent-nation-87317/vic-product-build:latest
    pull: true
    privileged: true
    environment:
      ADMIRAL: ${ADMIRAL}
      BUILD_ADMIRAL_RELEASE: ${BUILD_ADMIRAL_RELEASE}
      BUILD_VICENGINE_REVISION: ${BUILD_VICENGINE_REVISION}
      DRONE_BUILD_NUMBER: ${DRONE_BUILD_NUMBER}
      DRONE_TIMEOUT: ${DRONE_TIMEOUT}
      DRONE_TIMEOUT_INACTIVITY: ${DRONE_TIMEOUT_INACTIVITY}
      HARBOR: ${HARBOR}
      TERM: xterm
      VIC_MACHINE_SERVER: ${VIC_MACHINE_SERVER}
      VICENGINE: ${VICENGINE}
    volumes:
      - /dev:/dev
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - installer/scripts/ci-build.sh
    when:
      repo: vmware/vic-product
      event: [ push, pull_request, tag, deployment ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

#  integration-test:
#    image: harbor.ci.drone.local/library/vic-integration-test:1.36
#    pull: true
#    environment:
#      BIN: bin
#      GOPATH: /go
#      GS_CLIENT_EMAIL: ${GS_CLIENT_EMAIL}
#      GS_PROJECT_ID: ${GS_PROJECT_ID}
#      GS_PRIVATE_KEY: ${GS_PRIVATE_KEY}
#      PUBLIC_NETWORK: ${PUBLIC_NETWORK}
#      SHELL: /bin/bash
#      TEST_DATASTORE: ${TEST_DATASTORE}
#      TEST_PASSWORD: ${TEST_PASSWORD}
#      TEST_RESOURCE: ${TEST_RESOURCE}
#      TEST_URL: ${TEST_URL}
#      TEST_USERNAME: ${TEST_USERNAME}
#    volumes:
#      - /tmp
#    commands:
#      - tests/robot-run.sh
#    when:
#      repo: vmware/vic-product
#      event: [ push, pull_request, tag, deployment ]
#      branch: [ master, releases/*, refs/tags/* ]
#      status: success

  bundle-dev-builds:
    image: harbor.ci.drone.local/library/golang:1.8
    pull: true
    commands:
      - mkdir bundle
      - cd installer/bin
      - TMP=$(echo "$(ls -1t | grep "\.ova")" | sed "s/-/-dev-${DRONE_BUILD_NUMBER}-/")
      - echo "Renaming build artifact to $TMP..."
      - mv vic-*.ova ../../bundle/$TMP
      - ls -l ../../bundle
    when:
      repo: vmware/vic-product
      event: [ push, tag ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

  bundle-stage-builds:
    image: harbor.ci.drone.local/library/golang:1.8
    pull: true
    commands:
      - mkdir bundle
      - cd installer/bin
      - TMP=$(echo "$(ls -1t | grep "\.ova")" | sed "s/-/-stage-${DRONE_BUILD_NUMBER}-/")
      - echo "Renaming build artifact to $TMP..."
      - mv vic-*.ova ../../bundle/$TMP
      - ls -l ../../bundle
    when:
      repo: vmware/vic-product
      event: [ deployment ]
      environment: [ staging ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

  bundle-release-builds:
    image: harbor.ci.drone.local/library/golang:1.8
    pull: true
    commands:
      - mkdir bundle
      - cd installer/bin
      - TMP=$(echo "$(ls -1t | grep "\.ova")" | sed "s/-/-${DRONE_BUILD_NUMBER}-/")
      - echo "Renaming build artifact to $TMP..."
      - mv vic-*.ova ../../bundle/$TMP
      - ls -l ../../bundle
    when:
      repo: vmware/vic-product
      event: [ deployment ]
      environment: [ release ]
      branch: [ releases/*, refs/tags/* ]
      status: success

  publish-gcs-builds:
    image: victest/drone-gcs:1
    pull: true
    source: bundle-dev-builds
    target: vic-product-ova-builds
    acl:
      - allUsers:READER
    cache_control: public,max-age=3600
    when:
      repo: vmware/vic-product
      event: [ push, tag ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

  publish-gcs-staging:
    image: victest/drone-gcs:1
    pull: true
    source: bundle-stage-builds
    target: vic-product-ova-builds
    acl:
      - allUsers:READER
    cache_control: public,max-age=3600
    when:
      repo: vmware/vic-product
      event: [ deployment ]
      environment: [ staging ]
      branch: [ master, releases/*, refs/tags/* ]
      status: success

  publish-gcs-releases:
    image: victest/drone-gcs:1
    pull: true
    source: bundle-release-builds
    target: vic-product-ova-releases
    acl:
      - allUsers:READER
    cache_control: public,max-age=3600
    when:
      repo: vmware/vic-product
      event: [ deployment ]
      environment: [ release ]
      branch: [ releases/*, refs/tags/* ]
      status: success

  notify-slack-on-fail:
    image: plugins/slack
    webhook: ${SLACK_URL}
    username: drone
    template: >
        Build {{ build.link }} failed from the event {{ build.event }} by {{ lowercase build.author }}.
    when:
      repo: vmware/vic-product
      branch: [ master, releases/*, refs/tags/* ]
      status: [ failure ]

  notify-slack:
    image: plugins/slack
    webhook: ${PRODUCT_SLACK_URL}
    username: drone
    template: >
        Build '{{ build.link }}' completed with a '{{ build.status }}' status from the event '{{ build.event }}' by '{{ lowercase build.author }}'
    when:
      repo: vmware/vic-product
      branch: [ master, releases/*, refs/tags/* ]
      status: [ success, failure ]

  notify-slack-on-successful-release:
    image: plugins/slack
    webhook: ${PRODUCT_SLACK_URL}
    username: drone
    template: >
      The latest version of VIC OVA has been released, find the build here: https://console.cloud.google.com/storage/browser/vic-product-ova-releases
    when:
      repo: vmware/vic-product
      event: [ deployment ]
      environment: [ release ]
      branch: [ releases/*, refs/tags/* ]
      status: [ success ]

services:
  dind:
    image: docker:dind
    privileged: true
    pull: true
.keX7-DtFnTSPiksqpEh0SOUwA-q9B2ZDDKuhg2zguxc