
workspace:
  base: /go
  path: src/github.com/vmware/vic-product

clone:
  git:
    image: plugins/git
    tags: true
    recursive: false

pipeline:
  display-status:
    image: 'gcr.io/eminent-nation-87317/vic-integration-test:1.42'
    pull: true
    environment:
      BIN: bin
      SHELL: /bin/bash
    commands:
      - 'export COMMIT=${DRONE_COMMIT}'
      - 'echo "Expecting ${DRONE_COMMIT}"'
      - 'git log -5'
      - 'git log -1 --pretty=oneline | grep "^${DRONE_COMMIT}" > /dev/null && echo ''Build matches'' || (git log -1 --pretty=oneline | grep "Merge ${DRONE_COMMIT}" > /dev/null && echo ''Build is of a merge commit'' || (echo ''Build does not match!'' && exit 1))'

  check-org-membership:
    image: 'wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.44'
    pull: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
    secrets:
      - github_automation_api_key
    commands:
      - echo ${DRONE_COMMIT_AUTHOR}
      - /bin/bash -c '[[ ! $(curl --silent "https://api.github.com/orgs/vmware/members/${DRONE_COMMIT_AUTHOR}?access_token=$GITHUB_AUTOMATION_API_KEY") ]]'
    when:
      status: success

  dch-build:
    group: build
    image: 'gcr.io/eminent-nation-87317/vic-product-build:latest'
    pull: true
    privileged: true
    environment:
      TERM: xterm
    volumes:
      - '/dev:/dev'
      - '/var/run/docker.sock:/var/run/docker.sock'
    commands:
      - 'docker ps'
      - 'dinv/ci.sh build'
    when:
      branch: master
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      status: success

  dch-push:
    image: 'gcr.io/eminent-nation-87317/vic-product-build:latest'
    pull: true
    privileged: true
    environment:
      TERM: xterm
    secrets:
      - docker_user
      - docker_password
    volumes:
      - '/dev:/dev'
      - '/var/run/docker.sock:/var/run/docker.sock'
    commands:
      - 'docker ps'
      - 'dinv/ci.sh push'
    when:
      branch: master
      repo: vmware/vic-product
      event: [push, tag, deployment]
      status: success

  unified-ova-build:
    group: build
    image: 'gcr.io/eminent-nation-87317/vic-product-build:33e3b968'
    pull: true
    privileged: true
    environment:
      TERM: xterm
      VICENGINE: https://storage.googleapis.com/vic-engine-releases/vic_v1.4.3.tar.gz
      HARBOR: https://storage.googleapis.com/harbor-releases/release-1.5.0/harbor-offline-installer-latest.tgz
      ADMIRAL: v1.4.3
      VIC_MACHINE_SERVER: v1.4.3
    secrets:
      - admiral
      - build_admiral_release
      - build_vicengine_release
      - harbor
      - vic_machine_server
      - vicengine
      - gs_token_key
    volumes:
      - '/dev:/dev'
      - '/var/run/docker.sock:/var/run/docker.sock'
    commands:
      - installer/scripts/ci-build.sh
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: success

  integration-test-ova-setup:
    image: 'gcr.io/eminent-nation-87317/vic-integration-test:1.37'
    pull: true
    privileged: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
    secrets:
      - bridge_network
      - public_network
      - test_datastore
      - test_password
      - test_resource
      - test_url
      - test_username
    volumes:
      - /tmp
    commands:
      - 'pybot -d robot-logs/ova-setup-logs -s OVA-Setup tests/common-ova'
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: success

  integration-test:
    image: 'gcr.io/eminent-nation-87317/vic-integration-test:1.37'
    pull: true
    privileged: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
    secrets:
      - bridge_network
      - public_network
      - test_datastore
      - test_password
      - test_resource
      - test_url
      - test_username
      - vch_timeout
    volumes:
      - /tmp
    commands:
      - tests/robot-run.sh
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: success

  integration-test-ova-cleanup:
    image: 'gcr.io/eminent-nation-87317/vic-integration-test:1.37'
    pull: true
    environment:
      BIN: bin
      GOPATH: /go
      SHELL: /bin/bash
    secrets:
      - bridge_network
      - public_network
      - test_datastore
      - test_password
      - test_resource
      - test_url
      - test_username
    volumes:
      - /tmp
    commands:
      - 'pybot -d robot-logs/ova-cleanup-logs -s OVA-Cleanup tests/common-ova'
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  bundle-logs:
    group: post-build
    image: 'gcr.io/eminent-nation-87317/vic-integration-test:1.37'
    pull: true
    environment:
      SHELL: /bin/bash
    commands:
      - 'copyfiles=''cp -R test-screenshots robot-logs 2>/dev/null || :'''
      - 'eval $copyfiles'
      - 'mkdir robot-bundle'
      - 'outfile="ova_integration_logs_"$DRONE_BUILD_NUMBER"_"$DRONE_COMMIT".zip"'
      - 'zip -9 -r robot-bundle/$outfile robot-logs vic_appliance_logs* *container-logs*.zip *.log *.debug installer/bin/installer-build.log'
      - 'ls -l'
      - 'echo "Download test logs:"'
      - 'echo "https://console.cloud.google.com/m/cloudstorage/b/vic-ci-logs/o/$outfile?authuser=1"'
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  publish-logs:
    image: 'victest/drone-gcs:1'
    pull: true
    source: robot-bundle
    target: vic-ci-logs
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    secrets:
      - google_key
    when:
      repo: vmware/vic-product
      event: [push, pull_request, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  bundle-dev-builds:
    group: post-build
    image: 'wdc-harbor-ci.eng.vmware.com/default-project/golang:1.8'
    pull: true
    commands:
      - 'mkdir bundle'
      - 'cd installer/bin'
      - 'TMP=$(echo "$(ls -1t | grep "\.ova")" | sed "s/-/-dev-/")'
      - 'if [ "${DRONE_BUILD_EVENT}" == "push" ] && [ "${DRONE_BRANCH}" != "master" ]; then FOLDER=${DRONE_BRANCH} ; fi'
      - 'echo "Passed build will have artifact at https://storage.googleapis.com/vic-product-ova-builds/${FOLDER}${FOLDER:+/}${TMP}"'
      - 'echo "Renaming build artifact to $TMP..."'
      - 'mv vic-*.ova ../../bundle/$TMP'
      - 'cd ../../bundle'
      - 'ls -l'
      - 'echo "--------------------------------------------------"; stat --printf="Filesize (%n) = %s\n" $TMP; sha256sum --tag $TMP; sha1sum --tag $TMP; md5sum --tag $TMP'
    when:
      repo: vmware/vic-product
      event: [push, tag]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  bundle-stage-builds:
    group: post-build
    image: 'wdc-harbor-ci.eng.vmware.com/default-project/golang:1.8'
    pull: true
    commands:
      - 'mkdir bundle'
      - 'cd installer/bin'
      - 'TMP=$(echo "$(ls -1t | grep "\.ova")" | sed "s/-/-stage-/")'
      - 'echo "Passed build will have artifact at https://storage.googleapis.com/vic-product-ova-builds/$TMP"'
      - 'echo "Renaming build artifact to $TMP..."'
      - 'mv vic-*.ova ../../bundle/$TMP'
      - 'cd ../../bundle'
      - 'ls -l'
      - 'echo "--------------------------------------------------"; stat --printf="Filesize (%n) = %s\n" $TMP; sha256sum --tag $TMP; sha1sum --tag $TMP; md5sum --tag $TMP'
    when:
      repo: vmware/vic-product
      event: [deployment]
      environment: [staging]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  bundle-release-builds:
    group: post-build
    image: 'wdc-harbor-ci.eng.vmware.com/default-project/golang:1.8'
    pull: true
    commands:
      - 'mkdir bundle'
      - 'cd installer/bin'
      - 'TMP=$(echo vic-*.ova)'
      - 'echo "Passed build will have artifact at https://storage.googleapis.com/vic-product-ova-releases/$TMP"'
      - 'mv vic-*.ova ../../bundle/'
      - 'cd ../../bundle'
      - 'ls -l'
      - 'echo "--------------------------------------------------"; stat --printf="Filesize (%n) = %s\n" $TMP; sha256sum --tag $TMP; sha1sum --tag $TMP; md5sum --tag $TMP'
    when:
      repo: vmware/vic-product
      event: [deployment]
      environment: [release]
      branch: ['releases/*', 'refs/tags/*']
      status: [success, failure]

  publish-gcs-master-builds-push:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-ova-builds/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [push]
      branch: [master]
      status: success

  publish-gcs-release-builds-push:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-ova-builds/${DRONE_BRANCH}/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [push]
      branch: ['releases/*']
      status: success

  publish-gcs-builds-tag:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-ova-builds/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [tag]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: success

  publish-gcs-stage:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-ova-builds/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [deployment]
      environment: [staging]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: success

  publish-gcs-releases:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-ova-releases/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [deployment]
      environment: [release]
      branch: ['releases/*', 'refs/tags/*']
      status: success

  publish-gcs-builds-on-fail:
    image: 'victest/drone-gcs:1'
    pull: true
    secrets:
      - google_key
    source: bundle
    target: vic-product-failed-builds/
    acl:
      - 'allUsers:READER'
    cache_control: 'public,max-age=3600'
    when:
      repo: vmware/vic-product
      event: [push, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: failure

  notify-slack:
    image: plugins/slack
    secrets:
      - source: product_slack_url
        target: slack_webhook
    username: drone
    template: '{{#equal build.event "push"}}Push to `{{build.branch}}`{{/equal}}{{#equal build.event "pull_request"}}Pull request #{{build.pull}}{{/equal}}{{#equal build.event "tag"}}Tag ({{build.tag}}){{/equal}}{{#equal build.event "deployment"}}{{#equal build.deployTo "staging"}}Staging{{/equal}}{{#equal build.deployTo "release"}}Release{{/equal}}{{/equal}} build <{{build.link}}|{{repo.owner}}/{{repo.name}}#{{build.number}}> {{#success build.status}}succeeded{{else}}{{#failure build.status}}failed{{else}}completed with status {{build.status}}{{/failure}}{{/success}}.{{#failure build.status}} Latest commit <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{build.commit}}> by <https://github.com/{{lowercase build.author}}|{{lowercase build.author}}>.{{/failure}}'
    when:
      repo: vmware/vic-product
      event: [push, tag, deployment]
      branch: [master, 'releases/*', 'refs/tags/*']
      status: [success, failure]

  notify-slack-on-successful-release:
    image: plugins/slack
    secrets:
      - source: product_slack_url
        target: slack_webhook
    username: drone
    template: ':mega: Version {{build.tag}} of the VIC OVA has been {{#equal build.deployTo "staging"}}staged{{/equal}}{{#equal build.deployTo "release"}}released{{/equal}}. {{#equal build.deployTo "staging"}}Proof-read{{/equal}}{{#equal build.deployTo "release"}}Read{{/equal}} the <https://github.com/vmware/vic-product/releases/tag/{{build.tag}}|release notes> or <https://storage.googleapis.com/vic-product-ova-{{#equal build.deployTo "staging"}}builds/vic-stage{{/equal}}{{#equal build.deployTo "release"}}releases/vic{{/equal}}-{{build.tag}}-{{build.number}}-{{truncate build.commit 8}}.ova|download the build>.'
    when:
      repo: vmware/vic-product
      event: [deployment]
      environment: [staging, release]
      branch: ['releases/*', 'refs/tags/*']
      status: [success]

  pass-rate:
    group: post-build
    image: 'wdc-harbor-ci.eng.vmware.com/default-project/vic-integration-test:1.44'
    pull: true
    environment:
      BIN: bin
      SHELL: /bin/bash
    secrets:
      - github_automation_api_key
      - slack_url
    commands:
      - tests/pass-rate.sh

services:

  selenium-grid-hub:
    image: 'selenium/hub:3.7.1'
    ports:
      - '4444:4444'
    environment:
      - GRID_TIMEOUT=180000
      - GRID_BROWSER_TIMEOUT=180000

  selenium-node-firefox-1:
    image: 'selenium/node-firefox:3.7.1'
    environment:
      SE_OPTS: '-port 4445'
      HUB_PORT_4444_TCP_ADDR: selenium-grid-hub
      HUB_PORT_4444_TCP_PORT: '4444'
      DISPLAY: ':97.0'

  selenium-node-firefox-2:
    image: 'selenium/node-firefox:3.7.1'
    environment:
      SE_OPTS: '-port 4446'
      HUB_PORT_4444_TCP_ADDR: selenium-grid-hub
      HUB_PORT_4444_TCP_PORT: '4444'
      DISPLAY: ':98.0'

  selenium-node-firefox-3:
    image: 'selenium/node-firefox:3.7.1'
    environment:
      SE_OPTS: '-port 4447'
      HUB_PORT_4444_TCP_ADDR: selenium-grid-hub
      HUB_PORT_4444_TCP_PORT: '4444'
      DISPLAY: ':99.0'

